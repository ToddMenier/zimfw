_zimfw_run_list() {
  local -r zname=${1}
  print -PnR "%B${zname}:%b ${_zdirs[${zname}]}"
  if [[ -z ${_zurls[${zname}]} ]] print -Pn ' (external)'
  if (( ${_zfrozens[${zname}]} )) print -Pn ' (frozen)'
  if (( ${_zdisableds[${zname}]} )) print -Pn ' (disabled)'
  print
  if (( _zprintlevel > 1 )); then
    if [[ ${_zfrozens[${zname}]} -eq 0 && -n ${_zurls[${zname}]} ]]; then
      print -nR "  From: ${_zurls[${zname}]}, "
      if [[ -z ${_zrevs[${zname}]} ]]; then
        print -n 'default branch'
      else
        print -nR "${_ztypes[${zname}]} ${_zrevs[${zname}]}"
      fi
      print -nR ", using ${_ztools[${zname}]}"
      if (( ! _zsubmodules[${zname}] )) print -nR ', no git submodules'
      print
      if [[ -n ${_zonpulls[${zname}]} ]] print -R "  On-pull: ${_zonpulls[${zname}]}"
    fi
    # Match and remove the current module prefix from _zfpaths, _zfunctions and _zcmds
    local -r zpre=${zname}$'\0'
    local -r zfpaths=(${${(M)_zfpaths:#${zpre}*}#${zpre}}) zfunctions=(${${(M)_zfunctions:#${zpre}*}#${zpre}}) zcmds=(${${(M)_zcmds:#${zpre}*}#${zpre}})
    if (( ${#zfpaths} )) print -R '  fpath: '${zfpaths}
    if (( ${#zfunctions} )) print -R '  autoload: '${zfunctions}
    if (( ${#zcmds} )) print -R '  cmd: '${(j:; :)zcmds}
  fi
}
